@charset "UTF-8";
@import "setting-global";
@import "mixins-allpage";
@import "reset-default";

$color-active: #92a5ff;
$cloor-gridbg: #cacaca;
$margin-grid-base: .5rem;
$padding-grid-base: .5rem;

//ROW
//------------------------

.row {
  display: flex;
  flex-wrap: wrap;
  &.nowrap {
    flex-wrap: nowrap;
  }
  &.top {
    align-items: flex-start;
  }
  &.bottom {
    align-items: flex-end;
  }
  &.stretch {
    align-items: stretch;
  }
  &.valign {
    align-items: center;
  }
  &.text-base {
    align-items: baseline;
  }
  &.l-2r {
    justify-content: flex-start;
  }
  &.r-2l {
    justify-content: flex-end;
  }
  &.center {
    justify-content: center;
  }
  &.between {
    justify-content: space-between;
  }
  &.around {
    justify-content: space-around;
  }
  [class^='col-'] {
    box-sizing: border-box;
    min-height: 1px;
    padding: .5rem;
    flex-basis: 100%;
    &.top {
      align-self: flex-start;
    }
    &.bottom {
      align-self: flex-end;
    }
    &.stretch {
      align-self: stretch;
    }
    &.middle {
      align-self: center;
    }
    &.no-gutter {
      padding: 0;
    }
  }
  @each $breakpoint, $size in $breakpoints {
    .col {
      @media screen and (min-width: $size) {
        @for $i from 1 through 12 {
          $width: $i * (100%/12);

          &-#{$i} {
            flex-basis: $width;
            margin-bottom: 0;
          }
          &-offset-#{$i} {
            margin-left: $width;
          }
          &-push-#{$i} {
            position: relative;
            left: $width;
          }
          &-pull-#{$i} {
            position: relative;
            right: $width;
          }
          &-#{$breakpoint+$i} {
            flex-basis: $width;
            margin-bottom: 0;
          }

          &-offset-#{$breakpoint+$i} {
            margin-left: $width;
          }
          &-push-#{$breakpoint+$i} {
            position: relative;
            left: $width;
          }
          &-pull-#{$breakpoint+$i} {
            position: relative;
            right: $width;
          }
        }
      }
    }
  }
}

.d-none {
  display: none !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-table {
  display: table !important;
}

.d-table-cell {
  display: table-cell !important;
}

.d-flex {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.d-inline-flex {
  display: -webkit-inline !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

@each $breakpoint, $size in $breakpoints {
  .d {
    @media screen and (min-width: $size) {
      &-#{$breakpoint}-none {
        display: none !important;
      }
      &-#{$breakpoint}-block {
        display: block !important;

      }
      &-#{$breakpoint}-flex {
        display: -webkit-box !important;
        display: -webkit-flex !important;
        display: -ms-flexbox !important;
        display: flex !important;
      }
      &-#{$breakpoint}-inline {
        display: inline !important;
      }
      &-#{$breakpoint}-inline-block {
        display: inline !important;
      }
      &-#{$breakpoint}-table {
        display: table !important;
      }
      &-#{$breakpoint}-table-cell {
        display: table-cell !important;
      }
      &-#{$breakpoint}-inline-flex {
        display: -webkit-inline-box !important;
        display: -webkit-inline-flex !important;
        display: -ms-inline-flexbox !important;
        display: inline-flex !important;
      }
    }
  }
}

.l {
  float: left;
}

.r {
  float: right;
}